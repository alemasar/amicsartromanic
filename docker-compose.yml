version: "3.3"
services:
  mysql:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_DATABASE: 'amicsartromanic'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_HOST: 'localhost'
      MYSQL_PORT: '3306'
    ports:
      - "3306:3306"
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
  admin:
    build: ./amicsartromanic/admin
    ports:
      - "3000:3000"
    volumes:
      - ./amicsartromanic/admin/:/usr/src/admin/:rw
    environment:
      - NODE_ENV=dev
    networks:
      - amicsartromanic
    command: >
      sh -c '
        if test -d node_modules; 
        then 
          echo node_modules_exists ; 
        else 
          cp -a /tmp/admin/node_modules /usr/src/admin; 
        fi && 
        npm install && 
        npm run buildDev &&
        npm start
      '
  web:
    build: ./amicsartromanic/app
    ports:
      - "8080:8080"
    volumes:
      - ./amicsartromanic/app/:/usr/src/app/:rw
    environment:
      - NODE_ENV=dev
    networks:
      - amicsartromanic
    command: >
      sh -c '
        if test -d node_modules; 
        then 
          echo node_modules_exists ; 
        else 
          npm install ;
        fi && 
        ls -la &&
        npm run build &&
        npm run build-server &&
        npm run server
      '
  backend-service:
    build: ./amicsartromanic/api  # path is relative to docker-compose.yml location
    restart: always
    environment:
      DATABASE_URL: 'mysql+pymysql://user:password@mysql:3306/amicsartromanic'
    volumes:
      - ./amicsartromanic/api:/usr/src/backend-api # mount point
    ports:
      - 5000:5000  # host:container
    depends_on:
      - mysql
networks:
  amicsartromanic:
    # Use a custom driver
    driver: bridge
volumes:
  my-db: